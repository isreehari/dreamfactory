{
    "apiVersion": "v1",
    "kind": "Template",
    "labels": {
        "template": "laravel"
    },
    "message": "The following service(s) have been created in your project: ${APPLICATION_NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/luciddreamz/laravel-ex/blob/master/readme.md.",
    "metadata": {
        "annotations": {
            "description": "An example Laravel application. For more information about using this template, including OpenShift considerations, see https://github.com/luciddreamz/laravel-ex/blob/master/readme.md.",
            "iconClass": "icon-laravel",
            "openshift.io/display-name": "Laravel",
            "tags": "quickstart,php,laravel"
        },
        "name": "laravel"
    },
    "objects": [        
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {                
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "app": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "${APPLICATION_NAME}-8080-tcp",
                        "protocol": "TCP",
                        "port": 8080,
                        "targetPort": 8080
                    },
                    {
                        "name": "${APPLICATION_NAME}-8443-tcp",
                        "protocol": "TCP",
                        "port": 8443,
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "app": "${APPLICATION_NAME}",
                    "deploymentconfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Route",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "app": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "host": "${APPLICATION_DOMAIN}",
                "to": {
                    "kind": "Service",
                    "name": "${APPLICATION_NAME}",
                    "weight": 100
                },
                "port": {
                    "targetPort": "${APPLICATION_NAME}-8080-tcp"
                },
                "tls": {
                    "termination": "edge",
                    "insecureEdgeTerminationPolicy": "Redirect"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "ImageStream",
            "metadata": {
                "annotations": {
                    "description": "Keeps track of changes in the application image"
                },
                "name": "${APPLICATION_NAME}"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "BuildConfig",
            "metadata": {
                "annotations": {
                    "description": "Defines how to build the application"
                },
                "labels": {
                    "app": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}:latest"
                    }
                },
                "source": {
                    "contextDir": "${CONTEXT_DIR}",
                    "git": {
                        "ref": "${SOURCE_REPOSITORY_REF}",
                        "uri": "${SOURCE_REPOSITORY_URL}"
                    },
                    "type": "Git"
                },
                "strategy": {
                    "sourceStrategy": {
                        "env": [
                            {
                                "name": "COMPOSER_MIRROR",
                                "value": "${COMPOSER_MIRROR}"
                            }
                        ],
                        "from": {
                            "kind": "ImageStreamTag",
                            "name": "php:${PHP_VERSION}",
                            "namespace": "${NAMESPACE}"
                        }
                    },
                    "type": "Source"
                },
                "triggers": [
                    {
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "app": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "${APPLICATION_DEPLOYMENT_STRATEGY}"
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    },
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "dreamfactory"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${APPLICATION_NAME}:latest"
                            }
                        }
                    }
                ],
                "replicas": 1,
                "selector": {
                    "app": "${APPLICATION_NAME}",
                    "deploymentconfig": "${APPLICATION_NAME}"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "app": "${APPLICATION_NAME}",
                            "deploymentconfig": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {                                            
                        "containers": [
                            {
                                "name": "dreamfactory",
                                "image": "${APPLICATION_NAME}",
                                "ports": [
                                                {
                                                    "containerPort": 8080,
                                                    "protocol": "TCP"
                                                },
                                                {
                                                    "containerPort": 8443,
                                                    "protocol": "TCP"
                                                }
                                            ],
				                "resources": {
                                            "limits": {
                                                        "memory": "${MEMORY_LIMIT}"
                                                    }
                                        },
                                "readinessProbe": {
                                                    "failureThreshold": 3,
                                                    "httpGet": {
                                                        "path": "index.php",
                                                        "port": 8080,
                                                        "scheme": "HTTP",
                                                        "httpHeaders": [
                                                                        {
                                                                            "name": "X-Forwarded-Proto",
                                                                            "value": "https"
                                                                        }
                                                        ]
                                                    },
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "timeoutSeconds": 1
                                                },
                                "livenessProbe": {
                                                    "failureThreshold": 3,
                                                    "httpGet": {
                                                    "path": "index.php",
                                                    "port": 8080,
                                                    "scheme": "HTTP",
                                                    "httpHeaders": [
                                                                        {
                                                                        "name": "X-Forwarded-Proto",
                                                                        "value": "https"
                                                                        }
                                                    ]
                                                    },
                                                    "periodSeconds": 10,
                                                    "successThreshold": 1,
                                                    "timeoutSeconds": 1
                                },                                
                                "volumeMounts": [                                            
                                ]
                            }
                        ]
                    }
                }
            }
        }
    ],
    "parameters": [
        {
            "description": "The name assigned to all of the frontend objects defined in this template.",
            "displayName": "APPLICATION_NAME",
            "name": "APPLICATION_NAME",
            "required": true,
            "value": "laravel-mysql-persistent"
        },
        {
            "description": "The name assigned to all of the frontend objects defined in this template.",
            "displayName": "APPLICATION_DEPLOYMENT_STRATEGY",
            "name": "APPLICATION_DEPLOYMENT_STRATEGY",
            "required": true,
            "value": "Rolling"
        },        
        {
            "description": "The OpenShift Namespace where the ImageStream resides.",
            "displayName": "Namespace",
            "name": "NAMESPACE",
            "required": true,
            "value": "openshift"
        },
        {
            "description": "The URL of the repository with your application source code.",
            "displayName": "Git Repository URL",
            "name": "SOURCE_REPOSITORY_URL",
            "required": true,
            "value": "https://github.com/luciddreamz/laravel-ex.git"
        },
        {
            "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
            "displayName": "Git Reference",
            "name": "SOURCE_REPOSITORY_REF"
        },
        {
            "description": "Determines the 'environment' your application is currently.",
            "displayName": "Laravel Application Environment",
            "name": "LARAVEL_APP_ENV",
            "required": true,
            "value": "development"
        },
        {
            "description": "Enable or disable detailed error messages.",
            "displayName": "Laravel Application Debug Mode",
            "name": "LARAVEL_APP_DEBUG",
            "required": true,
            "value": "true"
        },
        {
            "description": "How often to check script timestamps for updates, in seconds. 0 will result in OPcache checking for updates on every request.",
            "displayName": "OPcache Revalidation Frequency",
            "name": "OPCACHE_REVALIDATE_FREQ",
            "value": "0"
        },
        {
            "description": "The custom Composer mirror URL",
            "displayName": "Custom Composer Mirror URL",
            "name": "COMPOSER_MIRROR",
            "value": ""
        },
        {
            "description": "The name of your current OpenShift cluster (console.CLUSTER_NAME.openshift.com).",
            "displayName": "Cluster Name",
            "name": "CLUSTER_NAME",
            "required": true,
            "value": "preview"
        },
        {
            "description": "The router shard used by routes in your current OpenShift cluster (http://PROJECT_NAME-APPLICATION_NAME.ROUTER_SHARD.CLUSTER_NAME.openshiftapps.com/).",
            "displayName": "Router Shard",
            "name": "ROUTER_SHARD",
            "required": true,
            "value": "44fs"
        },
        {
            "description": "Maximum amount of memory the Laravel container can use.",
            "displayName": "Memory Limit",
            "name": "MEMORY_LIMIT",
            "required": true,
            "value": "512Mi"
        },               
        {
            "description": "Set this to the relative path to your project if it is not in the root of your repository.",
            "displayName": "Context Directory",
            "name": "CONTEXT_DIR"
        },
        {
            "description": "The exposed hostname that will route to the Laravel service, if left blank a value will be defaulted.",
            "displayName": "Application Hostname",
            "name": "APPLICATION_DOMAIN",
            "value": ""
        },       
        {
            "displayName": "Database Service Name",
            "name": "DATABASE_SERVICE_NAME",
            "required": true,
            "value": "mysql"
        },
        {
            "description": "Database engine: mysql (default), pgsql, or sqlite.",
            "displayName": "Database Engine",
            "name": "DATABASE_ENGINE",
            "required": true,
            "value": "mysql"
        },
        {
            "displayName": "Database Name",
            "name": "DATABASE_NAME",
            "required": true,
            "value": "default"
        },
        {
            "displayName": "Database User",
            "name": "DATABASE_USER",
            "required": true,
            "value": "laravel"
        },
        {
            "displayName": "Database Password",
            "from": "[a-zA-Z0-9]{16}",
            "generate": "expression",
            "name": "DATABASE_PASSWORD"
        },
        {
            "description": "Set this to a 32 character random string.",
            "displayName": "Laravel Encryption Key",
            "from": "[\\w]{32}",
            "generate": "expression",
            "name": "LARAVEL_APP_KEY"
        },
        {
            "description": "PHP Version.",
            "displayName": "PHP Version",            
            "name": "PHP_VERSION",
            "value": "7.0"
        }
    ]
}